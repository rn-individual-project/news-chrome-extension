{"mappings":";MAAIA,mDAAa;EAEjBC,OAAOC,QAAQC,UAAUC,YACrB,UAASC,SAASC,QAAQC;IACtB,mBAAmBC;UACXC,cAAc;UACdC,SAASC,UAAUD,SAASC,WAAW;YACnCC,UAAUF,SAASC,OAAOE,MAAM;iBAC3BC,IAAI,GAAGA,IAAIF,QAAQG,QAAQD;cAC5BH,SAASK,OAAOC,KAAKL,QAAQE;;cAE7BH,OAAOO,UAAU,GAAGV,KAAKO,SAAS,OAAQP,OAAO;YACjDC,cAAcU,mBAAmBR,OAAOO,UAAUV,KAAKO,SAAS;;;;;aAKrEN;;QAEPW,YAAYC,UAAU;QAEtBC,MAAMtB,mDAAa;IACvBuB,MAAMD;MACFE,QAAQ;MACRC;QACI,UAAU;QACV,gBAAgB;;MAEpBC,MAAMC,KAAKC;QAAW,WAAWvB,QAAQwB;QAAS,OAAOxB,QAAQiB;QAAK,uBAAuBF;;OAE5FU,KAAK,AAAAC,YAAYA,SAASC,QAC1BF,KAAK,AAAAC,YAAYxB;MAAe0B,QAAQF;QACxCG,MAAM,AAAAC,SAASC,QAAQC,IAAIF;WAEzB","sources":["./src/background.js"],"sourcesContent":["var serverhost = 'https://fake-news-detector.azurewebsites.net/';\r\n\r\nchrome.runtime.onMessage.addListener(\r\n    function(request, sender, sendResponse) {\r\n        function getCookie(name) {\r\n            var cookieValue = null;\r\n            if (document.cookie && document.cookie !== '') {\r\n                var cookies = document.cookie.split(';');\r\n                for (var i = 0; i < cookies.length; i++) {\r\n                    var cookie = jQuery.trim(cookies[i]);\r\n                    // Does this cookie string begin with the name we want?\r\n                    if (cookie.substring(0, name.length + 1) === (name + '=')) {\r\n                        cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            return cookieValue;\r\n        }\r\n        var csrftoken = getCookie('csrftoken');\r\n\r\n        var url = serverhost + '/biasdet/get_prediction/'\r\n        fetch(url, {\r\n            method: 'post',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({'article': request.article, 'url': request.url, 'csrfmiddlewaretoken': csrftoken})\r\n        })\r\n            .then(response => response.json())\r\n            .then(response => sendResponse({ result: response}))\r\n            .catch(error => console.log(error))\r\n\r\n        return true\r\n\r\n/*\r\n        fetch(serverhost, {\r\n            method: 'post',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({ 'article' : request.article, 'url' : request.url })\r\n        })\r\n            .then(response => response.json())\r\n            .then(response => sendResponse({ result: response}))\r\n            .catch(error => console.log(error))\r\n\r\n        return true\r\n*/\r\n    });"],"names":["$e39320be2fcaa38be67f2bda499e9371$var$serverhost","chrome","runtime","onMessage","addListener","request","sender","sendResponse","name","cookieValue","document","cookie","cookies","split","i","length","jQuery","trim","substring","decodeURIComponent","csrftoken","getCookie","url","fetch","method","headers","body","JSON","stringify","article","then","response","json","result","catch","error","console","log"],"version":3,"file":"background.js.map"}